import React, { useEffect } from "react";
import qs from "qs";
import { useDispatch, useSelector } from "react-redux";
import {
  setCategoryId,
  setCurrentPage,
  setFilters, selectFilter
} from "../redux/slices/filterSlice.jsx";
import { useNavigate } from "react-router-dom";

import Skeleton from "../components/PizzaBlock/Sceleton";
import PizzaBlock from "../components/PizzaBlock";
import Sort, { sortList } from "../components/Sort";
import Categories from "../components/Categories";
import Pagination from "../components/Pagination";
import { fetchPizzas, selecPizzaData} from "../redux/slices/pizzaSlice.jsx";
 
const Home = () => {
  const navigate = useNavigate(); //–¥–∞–π —Ñ—É-–∏—é –∏–∑ —Å–≤–æ–µ–≥–æ —Ö—É–∫–∞
  const dispatch = useDispatch();
  
  const isSearch = React.useRef(false); // –ø–æ–∏—Å–∫–∞ –ø–æ—Ç–∞ –Ω–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∏—á–µ–≥–æ –Ω–µ—Ç
  const isMounted = React.useRef(false); //–ø–æ–∫–∞-–µ—Ç —á—Ç–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞ –Ω–µ–±—ã–ª–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –æ–¥–∏–Ω —Ä–∞–∑ –æ—Ç—Ä–∏—Å–æ–≤–∞–ª–æ—Å—å

  const {items,status} = useSelector(selecPizzaData);//—Ñ—É–Ω-–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ pizzaSlice
  const { categoryId, sort, currentPage, searchValue } = useSelector(selectFilter); // –≤—ã—Ç–∞—Å–∫–∏–≤–∞—é —Å–≤–æ–π —Å—Ç–µ–π—Ç —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ —Ö—É–∫–∞ –æ–ø–∏—Å—ã–≤–∞—é –≤—Å—ë —á—Ç–æ –Ω—É–∂–Ω–æ —á–µ—Ä–µ–∑ . –º–Ω–µ –≤—ã—Ç–∏—â–∏—Ç—å
  

  // const [sortType, setSortType] = React.useState({
  //   name: "–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏",
  //   sortProperty: "rating",
  // }); //—Ç—É—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –æ–±—ä–µ–∫—Ç –≤ –Ω—ë–º –µ—Å—Ç—å —Å–≤-—Ç–≤–∞ sortType –ø–µ—Ä–µ-—Å—è –≤ –∫–æ–º–µ–ø–æ–Ω–µ–Ω—Ç Sort.../>–æ–Ω –≤—ã—Ç–∞-—Å—è –∏–∑ –≤–µ–ª—å—é –∏ –≤–µ–ª—å—é —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –æ–±—ä–µ–∫—Ç –∏ —ç—Ç–æ –≤–µ–ª—å—é —Ä–µ–Ω–¥–∞—Ä—é —Ç–∞–º –≥–¥–µ —Å–ø–∞–Ω –∏ {value.name}   —Ö—Ä–∞–Ω–∏—Ç—Å—è –ª–æ–≥–∏–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏  –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ setSortType

  const onChangeCategory = (id) => {
    dispatch(setCategoryId(id));
  }
  //–º–µ—Ç–æ–¥ –º–µ–Ω—è–µ—é—â–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é

  const onChangePage = (number) => {
    dispatch(setCurrentPage(number));
  };

  // eslint-disable-next-line react-hooks/exhaustive-deps
  const getPizzas = async () => {
    const sortBy = sort.sortProperty.replace("-", ""); //replace("-") –∏–∑ —Å–≤-—Å—Ç–≤–∞ —É–¥–∞–ª–∏ - –µ—Å–ª–∏ –±—É–¥–µ—Ç
    const order = sort.sortProperty.includes("-") ? "asc" : "desc"; // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –µ—Å–ª–∏ –µ—Å—Ç—å - —Ç–æ –¥–µ–ª–∞–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∏–Ω–∞—á–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    const category = categoryId > 0 ? `category=${categoryId}` : "";
    const search = searchValue ? `&search=${searchValue}` : "";

    // fetch(
    //   `https://62b41f5aa36f3a973d2c669d.mockapi.io/items?page={currentPage}&limit=4&${category}&sortBy${sortBy}&order=${order}${search}`
    // ) // –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
    //   .then((res) => res.json())
    //   .then((arr) => {
    //     setItems(arr); //–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–∏—Ü—Ü—ã
    //     setIsLoading(false); //–ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
    //   });

    //–±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∞ –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫–µ–Ω–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

    // const {data} = await axios.get(
    // await –¥–æ–∂–¥–∏—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ axios.get()–æ–Ω –≤–Ω—É—Ç—Ä–∏ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º–∏—Å
    //   `https://62b41f5aa36f3a973d2c669d.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`
    // );

    
    dispatch(
      fetchPizzas({
        sortBy,
        order,
        category,
        search,
        currentPage,
      }),
    ); 
    window.scrollTo(0, 0);
  };

  // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –∑–∞–ø–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–≤—è–∑–∞–Ω—ã—Ö —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–∏—Ü—Ü –∏ –≤—à–∏–≤–∞–Ω–∏–µ –∏—Ö –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
 React.useEffect(() => {
    if (isMounted.current) {
      //–µ—Å–ª–∏ –±—ã–ª 1 —Ä–µ–Ω–¥–µ—Ä  –µ—Å–ª–∏ —ç—Ç–æ –±—É–¥–µ—Ç true —Ç–æ –¥–µ–ª–∞–π –Ω–∏–∂–Ω—é—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      const queryString = qs.stringify({
        // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–µ–≤—Ä–∞—â–∞—é –∏—Ö –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É
        sortProperty: sort.sortProperty,
        categoryId,
        currentPage,
      });

      navigate(`?${queryString}`);
    }
    isMounted.current = true;
  }, [categoryId, sort.sortProperty, currentPage]);

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º URl-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–µ–¥—É–∫—Å–µ–ø—Ä–æ–≤–µ—Ä—è—é –µ—Å—Ç—å –≤ url —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  useEffect(() => {
    if (window.location.search) {
      // –µ—Å–ª–∏ window.location.search –µ—Å—Ç—å —Ç–æ –±—É–¥—É –ø–∞—Ä—Å–∏—Ç—å –∏–∑ –ø–∞—Ä–ø–∞–º–µ—Ç—Ä–æ–≤ –∏ –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –≤ –æ–±—ä–µ–∫—Ç
      const params = qs.parse(window.location.search.substring(1)); // –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å ? –Ω–µ–ª—å–∑—è –¥–ª—è —ç—Ç–æ–≥–æ –ø–∏—à—É substring(1))
      const sort = sortList.find(
        (obj) => obj.sortProperty === params.sortProperty
      ); // –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–±–µ–∂–∞—Ç—å—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É —Å–≤–æ-—Ç–≤—É –∏ –Ω–∞–π—Ç–∏ –≤ –æ–±—ä–µ–∫—Ç–µ sortProperty —Ç–æ —á—Ç–æ –µ—Å—Ç—å –≤ params.sortProperty

      dispatch(
        setFilters({
          ...params,
          sort,
        })
      );
      isSearch.current = true; // –¥–æ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã–ø-—Å—è –Ω–∏–∂–Ω–∏–π useEffect –∑–∞—Ä–∞–Ω–µ–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∏—Å–∫
    }
  }, []);

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∏—Ü—Ü—ã
  useEffect(() => {
    //–µ—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–µ—Ç –ø–æ–∏—Å–∫–∞ —Ç–æ –¥–µ–ª–∞—é  fetchPizzas() –∑–∞–ø—Ä–æ—Å
    getPizzas();
  }, [categoryId, sort.sortProperty, searchValue, currentPage]); //–º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–ª–µ–¥–∏—Ç –µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–¥–∏ –≤ –±—ç–∫–µ–Ω–¥ –∏ –¥–µ–ª–∞–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–∏—Ü—Ü



  const pizzas = items.map((obj) => (
    <PizzaBlock
      key={obj.id}
      title={obj.title}
      price={obj.price}
      image={obj.imageUrl}
      sizes={obj.sizes}
      types={obj.types}
    /> 
  ));
  // –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–µ—Ä–µ–æ–±—Ä–∞–∑—É—é –≤ –º–∞—Å—Å–∏–≤ –ø–∏—Ü—Ü

  const skeletons = [...new Array(6)].map((_, index) => (
    <Skeleton key={index} />
  ));

  return (
    <div className="container">
      <div className="content__top">
        <Categories value={categoryId} onChangeCategory={onChangeCategory} />
        {/*// –≤ –æ–Ω–∫–ª–∏–∫ –ø–µ—Ä–µ–¥–∞—é —Ñ—É-–∏—é  –∫–æ–≥–¥–∞ —Ç—ã —Å—Ä–∞–±–æ—Ç–∞–µ—à—å onChangeCategory={(i) —Ç–æ –≤—ã–∑–æ–≤–∏ –º–Ω–µ  setCategoryId=(i) */}
        <Sort />
      </div>
      <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
      {status === "error" ? (
        <div className="content__error-info">
          <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï</h2>
          <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é,–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Ç—Å—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.</p>
        </div>
      ) : (
        <div className="content__items">
          {status === "loading" ? skeletons : pizzas}
        </div>
      )}
      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </div>
  );
};

export default Home;

// {...obj}/>) */
